* Shader setMat, etc. functions, replace all glUniform calls
* separte into hpp/cpp files, move old files to temp directory
* New Material class, inside RenderedObject (ambient, diffuse, specular, texture, color, etc.), and RenderedObject.set_attributes(shader)
* RenderedObject should not have color
* New functions in RenderedObject to make writing Sphere and future objects easier

Replace GLM with Eigen
Use Uniform Buffer Objects to set the view and projection matrix for all shaders
window_size -> (8,6) -> (800,600)?
Programmable camera
Programmable light source (multiple lights, DirectionalLight)
auto camera: when scene.run() is called, iterative over objects to find CoM and extent to auto-set properties of the camera (option to override if camera is set explicitly)
